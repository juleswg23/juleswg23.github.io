---
title: "A Great Summer of Great Tables"
subtitle: "My experience at the 2025 Posit internship"
author: "Jules Walzer-Goldfeld"
# freeze: true
format:
  revealjs:
    slide-number: h.v
    incremental: true
    progress: true
    theme: [simple, custom.scss]
    preview-links: auto
    transition: fade
    transition-speed: fast
    auto-stretch: false
    # controls: true
# toc: true
---


# Hello!

## Who are you listening to

::::: {.columns}

::: {.column width="70%"}


- üêÑ Studied CS and Math at Williams College

- üá™üá∏ Was an English teacher in Spain

- üí° I enjoy patterns and helping people see patterns

- üßó I like to play table tennis, soccer, chess, and climb rocks

- üî¢ I like logic puzzles!

:::

::: {.column width="30%" .fragment}
![](./assets/images/kenken.jpeg)
:::

:::::

---

### RStudio origin story
<!-- images of my orignial rstudio days -->

::: {.notes }
I'm sure everyone has their RStudio origin moment
:::

:::: {.r-stack}

:::{.fragment .fade-out fragment-index=1}
![](./assets/images/directory.png)
:::

:::{.fragment .fade-in fragment-index=1}
![](./assets/images/citibike.jpeg){height="20%" fig-align="center"}
:::

::::

# What I've done this summer

## gt-extras

![](../../images/gap.png)

A Python port of Thomas Mock's R package: [{gtExtras}](https://jthomasmock.github.io/gtExtras/)


<!-- "Second gt-extras slide" -->
## gt-extras

:::::: {.columns}

::::: {.column width="30%"}

::: {.fragment fragment-index=1 .highlight-current-red}
Plotting
:::

::: {.fragment fragment-index=2 .highlight-current-red}
Coloring
:::

::: {.fragment fragment-index=3 .highlight-current-red}
Theming
:::

::: {.fragment fragment-index=4 .highlight-current-red}
Iconing + Imaging
:::

::: {.fragment fragment-index=5 .highlight-current-red}
Utilities
:::

:::::

::::: {.column width="70%"}

:::: {.r-stack}

::: {.fragment fragment-index=1 .fade-in-then-out}

```{python}
from great_tables import GT
from great_tables.data import gtcars
import gt_extras as gte

gtcars_mini = gtcars.loc[
    9:17,
    ["model", "mfr", "year", "hp", "hp_rpm", "trq", "trq_rpm", "mpg_c", "mpg_h"]
]

gt = (
    GT(gtcars_mini, rowname_col="model")
    .tab_stubhead(label="Car")
    .cols_align("center")
    .cols_align("left", columns="mfr")
    .tab_options(
        table_background_color="transparent",
        table_border_top_color="transparent",
        table_width="350px",
        table_font_size="21px",
    )
)

gt.pipe(
    gte.gt_plt_bar,
    columns= ["hp", "hp_rpm", "trq", "trq_rpm", "mpg_c", "mpg_h"]
)
```
:::

::: {.fragment fragment-index=2 .fade-in-then-out}

```{python}
from great_tables import GT
from great_tables.data import islands
import gt_extras as gte

islands_mini = (
    islands
    .sort_values(by="size", ascending=False)
    .head(10)
)

gt = (
    GT(islands_mini, rowname_col="name")
    .tab_stubhead(label="Island")
    .tab_options(
        table_background_color="transparent",
        table_border_top_color="transparent",
        table_width="300px",
        table_font_size="20px",
    )
)

gt.pipe(gte.gt_color_box, columns="size", palette=["lightblue", "navy"])
```
:::

::: {.fragment fragment-index=3 .fade-in-then-out}

```{python}
from great_tables import GT, html
import gt_extras as gte
from great_tables.data import airquality

# Prepare the dataset
airquality_mini = airquality.head(10).assign(Year=1973)

# Create the base table
gt = (
    GT(airquality_mini)
    .tab_header(
        title="Dot Matrix Theme",
        subtitle="New York Air Quality Measurements",
    )
    .tab_spanner(label="Time", columns=["Year", "Month", "Day"])
    .tab_spanner(
        label="Measurement",
        columns=["Ozone", "Solar_R", "Wind", "Temp"],
    )
    .cols_move_to_start(columns=["Year", "Month", "Day"])
    .cols_label(
        Ozone=html("Ozone,<br>ppbV"),
        Solar_R=html("Solar R.,<br>cal/m<sup>2</sup>"),
        Wind=html("Wind,<br>mph"),
        Temp=html("Temp,<br>&deg;F"),
    )
    .tab_options(
        table_background_color="transparent",
        table_border_top_color="transparent",
        table_width="320px",
        table_font_size="28px",
    )
)

gt.pipe(gte.gt_theme_dot_matrix)
```

:::

::: {.fragment fragment-index=4 .fade-in-then-out}

```{python}
from great_tables import GT
from great_tables.data import towny
import gt_extras as gte

mini_towny = towny.head(10)
gt = GT(mini_towny).cols_hide(None).cols_unhide("name")

columns = [
    "pop_change_1996_2001_pct",
    "pop_change_2001_2006_pct",
    "pop_change_2006_2011_pct",
]

for col in columns:
    gt = (
        gt
        .cols_align(columns=col, align="center")
        .cols_unhide(col)
        .cols_label({col: col[11:20]})
        .tab_options(
            table_background_color="transparent",
            table_border_top_color="transparent",
            table_width="320px",
            table_font_size="20px",
        )

        .pipe(
            gte.gt_fa_rank_change,
            column=col,
            neutral_range=[-0.01, 0.01],
        )
    )

gt
```

:::

::: {.fragment fragment-index=5 .fade-in-then-out}

```{python}
from great_tables import GT, style, loc
import gt_extras as gte
from great_tables.data import peeps

df1 = peeps.loc[0:5, ["name_given", "address"]]
df2 = peeps.loc[6:11, ["name_given", "address"]]

gt1 = (
    GT(df1)
    .tab_header(title="Double Table")
    .tab_options(
        table_background_color="transparent",
        table_border_top_color="transparent",
        table_font_size="20px",
    )
    .tab_style(style=style.fill("transparent"), locations=[loc.column_header(), loc.stubhead()])
)
gt2 = (
    GT(df2)
    .tab_options(
        table_background_color="transparent",
        table_border_top_color="transparent",
        table_font_size="20px",
    )
    .tab_style(style=style.fill("transparent"), locations=[loc.column_header(), loc.stubhead()])
)

gte.gt_two_column_layout(gt1, gt2, table_header_from=1)
```

:::

::::

:::::

::::::

<!-- "Third gt-extras slide" -->

## gt-extras

:::: {.r-stack}

::: {.fragment fragment-index=1 .fade-out}

![found at [https://posit-dev.github.io/gt-extras/examples/](https://posit-dev.github.io/gt-extras/examples/)](./assets/images/examples.png){width="80%"}

:::

::: {.fragment fragment-index=1 .fade-in-then-out style="width: 1600px; zoom: 45%;"}

```{python}
import polars as pl
from great_tables import GT, md, style, loc
import gt_extras as gte

nfl_df = pl.read_json("./assets/nfl_2011_stats.json")


def make_gt(df) -> GT:
    return (
        GT(df, rowname_col="Team", groupname_col="team_division")
        .tab_options(
            table_background_color="transparent",
            table_border_top_color="transparent",
            table_font_size="20px",
            heading_background_color="transparent",
        )
        .tab_header(
            title="2011 NFL Season at a Glance",
            subtitle="Super Bowl XLVI: New York Giants def. New England Patriots",
        )
        .tab_source_note(
            md(
                '<span style="float: right;">Source: [Lee Sharpe, nflverse](https://github.com/nflverse/nfldata)</span>'
            )
        )
        .tab_stubhead(label="Team")
        .tab_spanner(label="Scoring", columns=["Avg PF", "Avg PA", "Point Diff"])
        .tab_spanner(label="Season Trends", columns=["Games", "Streak"])
        .tab_style(style=style.fill("transparent"), locations=[loc.spanner_labels(["Season Trends", "Scoring"]), loc.column_header(), loc.stubhead()])
        .fmt_number(columns="Point Diff", decimals=1)
        .fmt_image("team_logo_espn")
        .cols_hide(["Wins", "team_conf", "team_name"])
        .cols_align(align="center", columns=["Avg PF", "Avg PA", "Games"])
        .cols_move("team_logo_espn", after="Team")
        .cols_label({"team_logo_espn": ""})
        .pipe(
            gte.gt_plt_winloss,
            column="Games",
            win_color="blue",
            loss_color="orange",
            tie_color="gray",
            height=40,
            width=120,
        )
        .pipe(
            gte.gt_fa_rank_change,
            column="Streak",
            icon_type="turn",
            color_up="blue",
            color_down="orange",
            size=14,
        )
        .pipe(
            gte.gt_plt_dumbbell,
            col1="Avg PF",
            col2="Avg PA",
            col1_color="green",
            col2_color="red",
            width=300,
            height=40,
            num_decimals=0,
            label="Points For vs Points Against",
            font_size=12,
        )
        .pipe(
            gte.gt_color_box,
            columns="Point Diff",
            palette=["green", "yellow", "red"],
            domain=[14, -14],
        )
        .pipe(gte.gt_highlight_cols, columns="Team", fill="lightgray")
        .pipe(gte.gt_highlight_rows, rows="NYG", fill="gold", alpha=0.3)
        .pipe(gte.gt_highlight_rows, rows="NE", fill="silver", alpha=0.3)
        .pipe(gte.gt_add_divider, columns="Point Diff", color="darkblue", weight=3)
        .pipe(gte.gt_theme_538)
    )


gt1 = make_gt(nfl_df.head(16))
gt2 = make_gt(nfl_df.slice(16, 16))

gte.gt_two_column_layout(gt1, gt2, table_header_from=1)
```

:::

::::

<!-- "Fourth gt-extras slide" -->
---
### Plotting ‚û°Ô∏è [`gt_plt_summary()`](https://posit-dev.github.io/gt-extras/reference/gt_plt_summary)

::: {.notes}
Most effort (and most rewarding)
:::

```{python}
import polars as pl
from great_tables import GT
import gt_extras as gte
from datetime import datetime

df = pl.DataFrame(
    {
        "Date": [
            datetime(2024, 1, 1),
            datetime(2024, 1, 2),
            datetime(2024, 1, 7),
            datetime(2024, 1, 8),
            datetime(2024, 1, 13),
            datetime(2024, 1, 16),
            datetime(2024, 1, 20),
            datetime(2024, 1, 22),
            datetime(2024, 2, 1),
        ]
        * 5,
        "Value": [10, 15, 20, None, 25, 18, 22, 30, 40] * 5,
        "Category": ["A", "B", "C", "A", "B", "C", "D", None, None] * 5,
        "Boolean": [True, False, True] * 15,
        "Status": ["Active", "Inactive", None] * 15,
    }
)

gte.gt_plt_summary(df).tab_options(
    table_background_color="transparent", table_border_top_color="transparent",
    table_font_size="30px",
    heading_title_font_size="38px",
    heading_subtitle_font_size="26px",
)
```

::: {.fragment}
![aside: this is awesome!](./assets/images/quarto.png)
:::


## Great Tables

::: {.notes }
- In the process of extending the Great Tables package, I learned quite a bit about the parent package.
- I was essentially the most frequent user/tester of GT for 3 months
- Found a number of color and striping-related bugs
:::

![](../../images/gap.png)

## Great Tables

::: {.notes }
- In the process of extending the Great Tables package, I learned quite a bit about the parent package.
- I was essentially the most frequent user/tester of GT for 3 months
- Found a number of color and striping-related bugs
:::

:::::: {.columns}

::::: {.column width="40%"}

::: {.fragment fragment-index=1 .highlight-current-red}
A grand üòâ new [feature](https://github.com/posit-dev/great-tables/pull/765)
:::

::: {.fragment fragment-index=2 .highlight-current-red}
A collection of many [different](https://github.com/posit-dev/great-tables/pull/756) [fixes](https://github.com/posit-dev/great-tables/pull/754) to old group bugs
:::

::: {.fragment fragment-index=3 .highlight-current-red}
A row striping indexing [fix](https://github.com/posit-dev/great-tables/issues/701) with grouped data 
:::

::: {.fragment fragment-index=4 .highlight-current-red}
A [pair](https://github.com/posit-dev/great-tables/issues/747) of [improvements](https://github.com/posit-dev/great-tables/issues/745) to autocoloring the text of striped rows
:::

:::::

<!-- TODO include code examples -->

::::: {.column width="60%"}

:::: {.r-stack}

::: {.fragment fragment-index=1 .fade-in-then-out}



:::

::: {.fragment fragment-index=2 .fade-in-then-out}

:::

::: {.fragment fragment-index=3 .fade-in-then-out}

:::

::: {.fragment fragment-index=4 .fade-in-then-out}

:::

::::

:::::

::::::


## Technical Writing

::: {.notes}
Promoting a package
:::

- Blog [post](https://posit-dev.github.io/great-tables/blog/plots-in-tables/) in Great Tables blog
- Blog post for Posit.co/blog
- Personal blog [post](../../posts/Posit-Internship-Reflection/index.qmd)
- [Extending Great Tables](https://posit-dev.github.io/great-tables/get-started/extensions) in get-started


# Thank you

::: {.nonincremental}

- Rich and Michael
- The whole tiny-tools squad (Andrew, Hassan, Jeroen)
- Another open source intern (Frances)
- Isabel Z, Isabella V, Julia, Libby, Thomas & more who gave me feedback to build on
- All my Donut meet and greeters

:::


![](./assets/images/GT_logo.svg){width="40%" .absolute top=-30 right=20}

::: footer
(These slides are on my new personal site üëâ [juleswg.me](https://juleswg.me))
:::
